{"version":3,"file":"index.js","mappings":"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","sources":["webpack://sfmsbellsched/./node_modules/electron-squirrel-startup/index.js","webpack://sfmsbellsched/./node_modules/electron-squirrel-startup/node_modules/debug/src/browser.js","webpack://sfmsbellsched/./node_modules/electron-squirrel-startup/node_modules/debug/src/debug.js","webpack://sfmsbellsched/./node_modules/electron-squirrel-startup/node_modules/debug/src/index.js","webpack://sfmsbellsched/./node_modules/electron-squirrel-startup/node_modules/debug/src/node.js","webpack://sfmsbellsched/./node_modules/electron-squirrel-startup/node_modules/ms/index.js","webpack://sfmsbellsched/./src/index.ts","webpack://sfmsbellsched/external node-commonjs \"child_process\"","webpack://sfmsbellsched/external node-commonjs \"electron\"","webpack://sfmsbellsched/external node-commonjs \"fs\"","webpack://sfmsbellsched/external node-commonjs \"net\"","webpack://sfmsbellsched/external node-commonjs \"path\"","webpack://sfmsbellsched/external node-commonjs \"tty\"","webpack://sfmsbellsched/external node-commonjs \"util\"","webpack://sfmsbellsched/webpack/bootstrap","webpack://sfmsbellsched/webpack/runtime/compat","webpack://sfmsbellsched/webpack/startup"],"sourcesContent":["var path = require('path');\nvar spawn = require('child_process').spawn;\nvar debug = require('debug')('electron-squirrel-startup');\nvar app = require('electron').app;\n\nvar run = function(args, done) {\n  var updateExe = path.resolve(path.dirname(process.execPath), '..', 'Update.exe');\n  debug('Spawning `%s` with args `%s`', updateExe, args);\n  spawn(updateExe, args, {\n    detached: true\n  }).on('close', done);\n};\n\nvar check = function() {\n  if (process.platform === 'win32') {\n    var cmd = process.argv[1];\n    debug('processing squirrel command `%s`', cmd);\n    var target = path.basename(process.execPath);\n\n    if (cmd === '--squirrel-install' || cmd === '--squirrel-updated') {\n      run(['--createShortcut=' + target + ''], app.quit);\n      return true;\n    }\n    if (cmd === '--squirrel-uninstall') {\n      run(['--removeShortcut=' + target + ''], app.quit);\n      return true;\n    }\n    if (cmd === '--squirrel-obsolete') {\n      app.quit();\n      return true;\n    }\n  }\n  return false;\n};\n\nmodule.exports = check();\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process !== 'undefined' && process.type === 'renderer') {\n  module.exports = require('./browser.js');\n} else {\n  module.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nvar tty = require('tty');\nvar util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(function (key) {\n  return /^debug_/i.test(key);\n}).reduce(function (obj, key) {\n  // camel-case\n  var prop = key\n    .substring(6)\n    .toLowerCase()\n    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n  // coerce string value into JS value\n  var val = process.env[key];\n  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n  else if (val === 'null') val = null;\n  else val = Number(val);\n\n  obj[prop] = val;\n  return obj;\n}, {});\n\n/**\n * The file descriptor to write the `debug()` calls to.\n * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n *\n *   $ DEBUG_FD=3 node script.js 3>debug.log\n */\n\nvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\nif (1 !== fd && 2 !== fd) {\n  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')()\n}\n\nvar stream = 1 === fd ? process.stdout :\n             2 === fd ? process.stderr :\n             createWritableStdioStream(fd);\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty(fd);\n}\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nexports.formatters.o = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts)\n    .split('\\n').map(function(str) {\n      return str.trim()\n    }).join(' ');\n};\n\n/**\n * Map %o to `util.inspect()`, allowing multiple lines if needed.\n */\n\nexports.formatters.O = function(v) {\n  this.inspectOpts.colors = this.useColors;\n  return util.inspect(v, this.inspectOpts);\n};\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var name = this.namespace;\n  var useColors = this.useColors;\n\n  if (useColors) {\n    var c = this.color;\n    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n  } else {\n    args[0] = new Date().toUTCString()\n      + ' ' + name + ' ' + args[0];\n  }\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to `stream`.\n */\n\nfunction log() {\n  return stream.write(util.format.apply(util, arguments) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  if (null == namespaces) {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG;\n  } else {\n    process.env.DEBUG = namespaces;\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG;\n}\n\n/**\n * Copied from `node/src/node.js`.\n *\n * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n */\n\nfunction createWritableStdioStream (fd) {\n  var stream;\n  var tty_wrap = process.binding('tty_wrap');\n\n  // Note stream._type is used for test-module-load-list.js\n\n  switch (tty_wrap.guessHandleType(fd)) {\n    case 'TTY':\n      stream = new tty.WriteStream(fd);\n      stream._type = 'tty';\n\n      // Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    case 'FILE':\n      var fs = require('fs');\n      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n      stream._type = 'fs';\n      break;\n\n    case 'PIPE':\n    case 'TCP':\n      var net = require('net');\n      stream = new net.Socket({\n        fd: fd,\n        readable: false,\n        writable: true\n      });\n\n      // FIXME Should probably have an option in net.Socket to create a\n      // stream from an existing fd which is writable only. But for now\n      // we'll just add this hack and set the `readable` member to false.\n      // Test: ./node test/fixtures/echo.js < /etc/passwd\n      stream.readable = false;\n      stream.read = null;\n      stream._type = 'pipe';\n\n      // FIXME Hack to have stream not keep the event loop alive.\n      // See https://github.com/joyent/node/issues/1726\n      if (stream._handle && stream._handle.unref) {\n        stream._handle.unref();\n      }\n      break;\n\n    default:\n      // Probably an error on in uv_guess_handle()\n      throw new Error('Implement me. Unknown stream file type!');\n  }\n\n  // For supporting legacy API we put the FD here.\n  stream.fd = fd;\n\n  stream._isStdio = true;\n\n  return stream;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init (debug) {\n  debug.inspectOpts = {};\n\n  var keys = Object.keys(exports.inspectOpts);\n  for (var i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n  }\n}\n\n/**\n * Enable namespaces listed in `process.env.DEBUG` initially.\n */\n\nexports.enable(load());\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","import { app, BrowserWindow, Tray, Menu, nativeImage, autoUpdater, dialog, shell, nativeTheme } from 'electron';\r\nimport config from \"./config.json\";\r\nimport icons from \"./icons.json\";\r\n\r\n// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack\r\n// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on\r\n// whether you're running in development or production).\r\ndeclare const MAIN_WINDOW_WEBPACK_ENTRY: string;\r\ndeclare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;\r\n\r\n// Handle creating/removing shortcuts on Windows when installing/uninstalling.\r\nif (require('electron-squirrel-startup')) {\r\n  app.quit();\r\n}\r\n\r\nlet contextMenu : Menu;\r\nlet tray : Tray;\r\nlet isUpdating = false;\r\n\r\nconst checkForUpdates = (): void => {\r\n  if (isUpdating){\r\n    return;\r\n  }\r\n  if (!app.isPackaged){\r\n    return;\r\n  }\r\n  if (!contextMenu){\r\n    return;\r\n  }\r\n  if (!tray){\r\n    return;\r\n  }\r\n\r\n  isUpdating = true;\r\n  contextMenu.getMenuItemById(\"checkForUpdatesButton\").enabled = false;\r\n  contextMenu.getMenuItemById(\"reopenWindowButton\").enabled = false;\r\n  tray.setContextMenu(contextMenu);\r\n\r\n  autoUpdater.checkForUpdates();\r\n}\r\n\r\nif (app.isPackaged){\r\n  const server = config.hazelUpdateURL;\r\n  const url = `${server}/update/${process.platform}/${app.getVersion()}`;\r\n\r\n  autoUpdater.setFeedURL({ url });\r\n\r\n  autoUpdater.on('update-downloaded', (event, releaseNotes, releaseName) => {\r\n\r\n    dialog.showMessageBox({\r\n      type: 'info',\r\n      buttons: ['Restart now', 'Restart later'],\r\n      title: 'Application Update',\r\n      message: process.platform === 'win32' ? releaseNotes : releaseName,\r\n      detail:\r\n          'A new version of the SFMS Bell Schedule has been\\ndownloaded. Restart the application to apply the updates.'\r\n    }).then((returnValue) => {\r\n      if (returnValue.response === 0) autoUpdater.quitAndInstall()\r\n    });\r\n    contextMenu.getMenuItemById(\"checkForUpdatesButton\").enabled = true;\r\n    contextMenu.getMenuItemById(\"reopenWindowButton\").enabled = true;\r\n    tray.setContextMenu(contextMenu);\r\n    isUpdating = false;\r\n    try {\r\n      autoUpdater.off(\"update-not-available\", showUpToDateDialog);\r\n    }\r\n    catch (e) {\r\n      console.warn(e);\r\n    }\r\n  })\r\n\r\n  autoUpdater.on('error', (message) => {\r\n    console.error('There was a problem updating the application');\r\n    console.error(message);\r\n    dialog.showMessageBox({\r\n      type: 'error',\r\n      buttons: ['Ok'],\r\n      title: 'Update Error',\r\n      message: \"There was an error while trying to update the SFMS Bell Schedule:\",\r\n      detail: message.toString()\r\n    });\r\n    contextMenu.getMenuItemById(\"checkForUpdatesButton\").enabled = true;\r\n    contextMenu.getMenuItemById(\"reopenWindowButton\").enabled = true;\r\n    tray.setContextMenu(contextMenu);\r\n    isUpdating = false;\r\n\r\n  });\r\n\r\n  // Check for updates every 1 hour.\r\n  setInterval(()=> {\r\n    checkForUpdates();\r\n    autoUpdater.on(\"update-not-available\", enableButtonsOnAutoUpdate);\r\n  }, 3600000);\r\n}\r\n\r\nconst enableButtonsOnAutoUpdate = (): void => {\r\n  contextMenu.getMenuItemById(\"checkForUpdatesButton\").enabled = true;\r\n  contextMenu.getMenuItemById(\"reopenWindowButton\").enabled = true;\r\n  tray.setContextMenu(contextMenu);\r\n  isUpdating = false;\r\n  autoUpdater.off(\"update-not-available\", enableButtonsOnAutoUpdate);\r\n}\r\n\r\nconst createWindow = (): void => {\r\n  // Create the browser window.\r\n  const mainWindow = new BrowserWindow({\r\n    height: 79,\r\n    width: 365,\r\n    webPreferences: {\r\n      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,\r\n      nodeIntegration: true\r\n    },\r\n    alwaysOnTop: true,\r\n    title: \"SFMS Bell Schedule\",\r\n    show: false,\r\n    autoHideMenuBar: true,\r\n    titleBarStyle: \"hidden\",\r\n    focusable: false,\r\n    maximizable: false,\r\n    closable: true,\r\n    minimizable: false,\r\n    hasShadow: false,\r\n    maxHeight: 79,\r\n    minHeight: 79,\r\n    minWidth: 355\r\n  });\r\n\r\n  // and load the index.html of the app.\r\n  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);\r\n\r\n  // Set the opacity of the app.\r\n  mainWindow.setOpacity(0.7);\r\n\r\n  // Open the DevTools.\r\n  // Comment in a prod release.\r\n  // mainWindow.webContents.openDevTools();\r\n\r\n  mainWindow.once('ready-to-show', () => {\r\n    mainWindow.showInactive()\r\n  });\r\n\r\n  let theme = \"light\";\r\n  if (nativeTheme.shouldUseDarkColors){\r\n    theme = \"dark\";\r\n  }\r\n\r\n  // @ts-ignore\r\n  const updateIcon = nativeImage.createFromDataURL(icons[theme].updateIcon);\r\n  // @ts-ignore\r\n  const reopenIcon = nativeImage.createFromDataURL(icons[theme].reopenIcon);\r\n  // @ts-ignore\r\n  const openInBrowserIcon = nativeImage.createFromDataURL(icons[theme].openInBrowserIcon);\r\n  // @ts-ignore\r\n  const bugReportIcon = nativeImage.createFromDataURL(icons[theme].bugReportIcon);\r\n  // @ts-ignore\r\n  const closeIcon = nativeImage.createFromDataURL(icons[theme].closeIcon);\r\n  // @ts-ignore\r\n  const infoIcon = nativeImage.createFromDataURL(icons[theme].infoIcon);\r\n\r\n  // disable right click menu on move region\r\n  const WM_INITMENU = 0x0116;\r\n  mainWindow.hookWindowMessage(WM_INITMENU, () => {\r\n    mainWindow.setEnabled(false);\r\n    mainWindow.setEnabled(true);\r\n  });\r\n\r\n  const icon = nativeImage.createFromDataURL(icons.appIcon);\r\n\r\n  tray = new Tray(icon);\r\n  contextMenu = Menu.buildFromTemplate([\r\n    { label: \"SFMS Bell Schedule v\" + app.getVersion().toString(), type: \"normal\", enabled: false, id: \"title\", icon: infoIcon},\r\n    { type: \"separator\" },\r\n    { label: 'Check for Updates', type: 'normal', click: () => {manualUpdate();}, id: \"checkForUpdatesButton\", icon: updateIcon },\r\n    { label: 'Reopen Window', type: 'normal', click: () => {mainWindow.close(); tray.destroy(); createWindow();}, id: \"reopenWindowButton\", icon: reopenIcon },\r\n    { label: 'Open Sanford Bell Schedule Website', type: 'normal', click: () => {siteOpen();}, id: 'siteButton' , icon: openInBrowserIcon},\r\n    { label: 'Quit', type: 'normal', click: () => {app.quit()}, id: \"quitButton\", icon: closeIcon }\r\n  ]);\r\n  tray.setToolTip('SFMS Bell Schedule');\r\n  tray.setContextMenu(contextMenu);\r\n};\r\n\r\n/*const aboutWindow = () => {\r\n  const aboutWin = new BrowserWindow({\r\n    height: 600,\r\n    width: 400,\r\n    webPreferences: {\r\n      preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,\r\n    },\r\n    alwaysOnTop: false,\r\n    title: \"SFMS Bell Schedule | About\",\r\n    show: false,\r\n    autoHideMenuBar: true,\r\n    focusable: true,\r\n    maximizable: false,\r\n    closable: true,\r\n    minimizable: true,\r\n    hasShadow: true\r\n  });\r\n\r\n  // and load the index.html of the app.\r\n  aboutWin.loadURL(\"https://google.com\");\r\n\r\n  // Set the opacity of the app.\r\n  aboutWin.setOpacity(1);\r\n\r\n  // Open the DevTools.\r\n  // Comment in a prod release.\r\n  // mainWindow.webContents.openDevTools();\r\n\r\n  aboutWin.once('ready-to-show', () => {\r\n    aboutWin.show()\r\n  });\r\n}*/\r\n\r\nconst manualUpdate = (): void => {\r\n  autoUpdater.on(\"update-not-available\", showUpToDateDialog);\r\n  checkForUpdates();\r\n}\r\n\r\nconst siteOpen = (): void => {\r\n  shell.openExternal(\"https://sanford.croomssched.tech/\")\r\n}\r\n\r\nconst showUpToDateDialog = (): void => {\r\n  dialog.showMessageBox({\r\n    type: 'info',\r\n    buttons: ['OK'],\r\n    title: 'No Updates Available',\r\n    message: \"You're all set!\",\r\n    detail:\r\n        \"The application is up-to-date.\"\r\n  })\r\n  contextMenu.getMenuItemById(\"checkForUpdatesButton\").enabled = true;\r\n  contextMenu.getMenuItemById(\"reopenWindowButton\").enabled = true;\r\n  tray.setContextMenu(contextMenu);\r\n  isUpdating = false;\r\n  autoUpdater.off(\"update-not-available\", showUpToDateDialog);\r\n}\r\n\r\n// This method will be called when Electron has finished\r\n// initialization and is ready to create browser windows.\r\n// Some APIs can only be used after this event occurs.\r\napp.on('ready', createWindow);\r\n\r\napp.on('activate', () => {\r\n  // On OS X it's common to re-create a window in the app when the\r\n  // dock icon is clicked and there are no other windows open.\r\n  if (BrowserWindow.getAllWindows().length === 0) {\r\n    createWindow();\r\n    checkForUpdates();\r\n  }\r\n});","module.exports = require(\"child_process\");","module.exports = require(\"electron\");","module.exports = require(\"fs\");","module.exports = require(\"net\");","module.exports = require(\"path\");","module.exports = require(\"tty\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/native_modules/\";","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(575);\n"],"names":["path","spawn","debug","app","run","args","done","updateExe","resolve","dirname","process","execPath","detached","on","module","exports","platform","cmd","argv","target","basename","quit","check","load","r","storage","e","env","DEBUG","log","console","Function","prototype","apply","call","arguments","formatArgs","useColors","this","namespace","humanize","diff","c","color","splice","index","lastC","replace","match","save","namespaces","removeItem","window","type","document","documentElement","style","WebkitAppearance","firebug","exception","table","navigator","userAgent","toLowerCase","parseInt","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","err","message","enable","prevTime","createDebug","enabled","self","curr","Date","ms","prev","Array","length","i","coerce","unshift","format","formatter","val","bind","hash","charCodeAt","Math","abs","selectColor","init","Error","stack","disable","names","skips","split","len","push","substr","name","test","tty","util","inspectOpts","keys","Object","stream","write","prefix","join","toUTCString","Boolean","isatty","fd","filter","key","reduce","obj","prop","substring","_","k","toUpperCase","Number","DEBUG_FD","deprecate","stdout","stderr","binding","guessHandleType","WriteStream","_type","_handle","unref","SyncWriteStream","autoClose","Socket","readable","writable","read","_isStdio","createWritableStdioStream","o","inspect","map","str","trim","O","s","m","h","d","plural","n","floor","ceil","options","String","exec","parseFloat","parse","isNaN","long","round","fmtShort","contextMenu","tray","isUpdating","checkForUpdates","isPackaged","getMenuItemById","setContextMenu","autoUpdater","url","hazelUpdateURL","getVersion","setFeedURL","event","releaseNotes","releaseName","dialog","showMessageBox","buttons","title","detail","then","returnValue","response","quitAndInstall","off","showUpToDateDialog","warn","error","toString","setInterval","enableButtonsOnAutoUpdate","createWindow","mainWindow","BrowserWindow","height","width","webPreferences","preload","nodeIntegration","alwaysOnTop","show","autoHideMenuBar","titleBarStyle","focusable","maximizable","closable","minimizable","hasShadow","maxHeight","minHeight","minWidth","loadURL","setOpacity","once","showInactive","theme","nativeTheme","shouldUseDarkColors","updateIcon","nativeImage","createFromDataURL","reopenIcon","openInBrowserIcon","closeIcon","bugReportIcon","infoIcon","hookWindowMessage","setEnabled","icon","appIcon","Tray","Menu","buildFromTemplate","label","id","click","manualUpdate","close","destroy","siteOpen","setToolTip","shell","openExternal","getAllWindows","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","ab","__dirname","__webpack_exports__"],"sourceRoot":""}